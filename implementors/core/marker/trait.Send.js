(function() {var implementors = {};
implementors["byteorder"] = [{"text":"impl Send for BigEndian","synthetic":true,"types":[]},{"text":"impl Send for LittleEndian","synthetic":true,"types":[]}];
implementors["foreign_types_shared"] = [{"text":"impl Send for Opaque","synthetic":true,"types":[]}];
implementors["itoa"] = [{"text":"impl Send for Buffer","synthetic":true,"types":[]}];
implementors["libc"] = [{"text":"impl !Send for group","synthetic":true,"types":[]},{"text":"impl Send for utimbuf","synthetic":true,"types":[]},{"text":"impl Send for timeval","synthetic":true,"types":[]},{"text":"impl Send for timespec","synthetic":true,"types":[]},{"text":"impl Send for rlimit","synthetic":true,"types":[]},{"text":"impl Send for rusage","synthetic":true,"types":[]},{"text":"impl Send for ipv6_mreq","synthetic":true,"types":[]},{"text":"impl !Send for hostent","synthetic":true,"types":[]},{"text":"impl !Send for iovec","synthetic":true,"types":[]},{"text":"impl Send for pollfd","synthetic":true,"types":[]},{"text":"impl Send for winsize","synthetic":true,"types":[]},{"text":"impl Send for linger","synthetic":true,"types":[]},{"text":"impl !Send for sigval","synthetic":true,"types":[]},{"text":"impl Send for itimerval","synthetic":true,"types":[]},{"text":"impl Send for tms","synthetic":true,"types":[]},{"text":"impl !Send for servent","synthetic":true,"types":[]},{"text":"impl !Send for protoent","synthetic":true,"types":[]},{"text":"impl Send for in_addr","synthetic":true,"types":[]},{"text":"impl Send for ip_mreq","synthetic":true,"types":[]},{"text":"impl Send for ip_mreq_source","synthetic":true,"types":[]},{"text":"impl Send for sockaddr","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_in","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_in6","synthetic":true,"types":[]},{"text":"impl !Send for addrinfo","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_ll","synthetic":true,"types":[]},{"text":"impl Send for fd_set","synthetic":true,"types":[]},{"text":"impl !Send for tm","synthetic":true,"types":[]},{"text":"impl Send for sched_param","synthetic":true,"types":[]},{"text":"impl !Send for Dl_info","synthetic":true,"types":[]},{"text":"impl !Send for lconv","synthetic":true,"types":[]},{"text":"impl Send for in_pktinfo","synthetic":true,"types":[]},{"text":"impl !Send for ifaddrs","synthetic":true,"types":[]},{"text":"impl Send for in6_rtmsg","synthetic":true,"types":[]},{"text":"impl Send for arpreq","synthetic":true,"types":[]},{"text":"impl Send for arpreq_old","synthetic":true,"types":[]},{"text":"impl Send for arphdr","synthetic":true,"types":[]},{"text":"impl !Send for mmsghdr","synthetic":true,"types":[]},{"text":"impl Send for epoll_event","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_un","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_storage","synthetic":true,"types":[]},{"text":"impl Send for utsname","synthetic":true,"types":[]},{"text":"impl !Send for sigevent","synthetic":true,"types":[]},{"text":"impl Send for rlimit64","synthetic":true,"types":[]},{"text":"impl !Send for glob_t","synthetic":true,"types":[]},{"text":"impl !Send for passwd","synthetic":true,"types":[]},{"text":"impl !Send for spwd","synthetic":true,"types":[]},{"text":"impl Send for dqblk","synthetic":true,"types":[]},{"text":"impl Send for signalfd_siginfo","synthetic":true,"types":[]},{"text":"impl Send for itimerspec","synthetic":true,"types":[]},{"text":"impl Send for fsid_t","synthetic":true,"types":[]},{"text":"impl Send for packet_mreq","synthetic":true,"types":[]},{"text":"impl Send for cpu_set_t","synthetic":true,"types":[]},{"text":"impl !Send for if_nameindex","synthetic":true,"types":[]},{"text":"impl Send for msginfo","synthetic":true,"types":[]},{"text":"impl Send for sembuf","synthetic":true,"types":[]},{"text":"impl Send for input_event","synthetic":true,"types":[]},{"text":"impl Send for input_id","synthetic":true,"types":[]},{"text":"impl Send for input_absinfo","synthetic":true,"types":[]},{"text":"impl Send for input_keymap_entry","synthetic":true,"types":[]},{"text":"impl Send for input_mask","synthetic":true,"types":[]},{"text":"impl Send for ff_replay","synthetic":true,"types":[]},{"text":"impl Send for ff_trigger","synthetic":true,"types":[]},{"text":"impl Send for ff_envelope","synthetic":true,"types":[]},{"text":"impl Send for ff_constant_effect","synthetic":true,"types":[]},{"text":"impl Send for ff_ramp_effect","synthetic":true,"types":[]},{"text":"impl Send for ff_condition_effect","synthetic":true,"types":[]},{"text":"impl !Send for ff_periodic_effect","synthetic":true,"types":[]},{"text":"impl Send for ff_rumble_effect","synthetic":true,"types":[]},{"text":"impl Send for ff_effect","synthetic":true,"types":[]},{"text":"impl !Send for dl_phdr_info","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Ehdr","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Ehdr","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Sym","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Sym","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Phdr","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Phdr","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Shdr","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Shdr","synthetic":true,"types":[]},{"text":"impl Send for Elf32_Chdr","synthetic":true,"types":[]},{"text":"impl Send for Elf64_Chdr","synthetic":true,"types":[]},{"text":"impl Send for ucred","synthetic":true,"types":[]},{"text":"impl !Send for mntent","synthetic":true,"types":[]},{"text":"impl !Send for posix_spawn_file_actions_t","synthetic":true,"types":[]},{"text":"impl Send for posix_spawnattr_t","synthetic":true,"types":[]},{"text":"impl Send for genlmsghdr","synthetic":true,"types":[]},{"text":"impl Send for in6_pktinfo","synthetic":true,"types":[]},{"text":"impl Send for arpd_request","synthetic":true,"types":[]},{"text":"impl Send for inotify_event","synthetic":true,"types":[]},{"text":"impl Send for fanotify_response","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_vm","synthetic":true,"types":[]},{"text":"impl Send for regmatch_t","synthetic":true,"types":[]},{"text":"impl Send for sock_extended_err","synthetic":true,"types":[]},{"text":"impl Send for __c_anonymous_sockaddr_can_tp","synthetic":true,"types":[]},{"text":"impl Send for __c_anonymous_sockaddr_can_j1939","synthetic":true,"types":[]},{"text":"impl Send for can_filter","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_nl","synthetic":true,"types":[]},{"text":"impl Send for dirent","synthetic":true,"types":[]},{"text":"impl Send for dirent64","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_alg","synthetic":true,"types":[]},{"text":"impl Send for af_alg_iv","synthetic":true,"types":[]},{"text":"impl Send for mq_attr","synthetic":true,"types":[]},{"text":"impl Send for sockaddr_can","synthetic":true,"types":[]},{"text":"impl Send for statx","synthetic":true,"types":[]},{"text":"impl Send for statx_timestamp","synthetic":true,"types":[]},{"text":"impl !Send for aiocb","synthetic":true,"types":[]},{"text":"impl Send for __exit_status","synthetic":true,"types":[]},{"text":"impl Send for __timeval","synthetic":true,"types":[]},{"text":"impl !Send for glob64_t","synthetic":true,"types":[]},{"text":"impl !Send for msghdr","synthetic":true,"types":[]},{"text":"impl Send for cmsghdr","synthetic":true,"types":[]},{"text":"impl Send for termios","synthetic":true,"types":[]},{"text":"impl Send for mallinfo","synthetic":true,"types":[]},{"text":"impl Send for nlmsghdr","synthetic":true,"types":[]},{"text":"impl Send for nlmsgerr","synthetic":true,"types":[]},{"text":"impl Send for nl_pktinfo","synthetic":true,"types":[]},{"text":"impl Send for nl_mmap_req","synthetic":true,"types":[]},{"text":"impl Send for nl_mmap_hdr","synthetic":true,"types":[]},{"text":"impl Send for nlattr","synthetic":true,"types":[]},{"text":"impl !Send for rtentry","synthetic":true,"types":[]},{"text":"impl Send for timex","synthetic":true,"types":[]},{"text":"impl Send for ntptimeval","synthetic":true,"types":[]},{"text":"impl !Send for regex_t","synthetic":true,"types":[]},{"text":"impl Send for utmpx","synthetic":true,"types":[]},{"text":"impl Send for sigset_t","synthetic":true,"types":[]},{"text":"impl Send for sysinfo","synthetic":true,"types":[]},{"text":"impl Send for msqid_ds","synthetic":true,"types":[]},{"text":"impl Send for sigaction","synthetic":true,"types":[]},{"text":"impl Send for statfs","synthetic":true,"types":[]},{"text":"impl Send for flock","synthetic":true,"types":[]},{"text":"impl Send for flock64","synthetic":true,"types":[]},{"text":"impl Send for siginfo_t","synthetic":true,"types":[]},{"text":"impl !Send for stack_t","synthetic":true,"types":[]},{"text":"impl Send for stat","synthetic":true,"types":[]},{"text":"impl Send for stat64","synthetic":true,"types":[]},{"text":"impl Send for statfs64","synthetic":true,"types":[]},{"text":"impl Send for statvfs64","synthetic":true,"types":[]},{"text":"impl Send for pthread_attr_t","synthetic":true,"types":[]},{"text":"impl Send for _libc_fpxreg","synthetic":true,"types":[]},{"text":"impl Send for _libc_xmmreg","synthetic":true,"types":[]},{"text":"impl Send for _libc_fpstate","synthetic":true,"types":[]},{"text":"impl Send for user_regs_struct","synthetic":true,"types":[]},{"text":"impl !Send for user","synthetic":true,"types":[]},{"text":"impl !Send for mcontext_t","synthetic":true,"types":[]},{"text":"impl Send for ipc_perm","synthetic":true,"types":[]},{"text":"impl Send for shmid_ds","synthetic":true,"types":[]},{"text":"impl Send for termios2","synthetic":true,"types":[]},{"text":"impl Send for ip_mreqn","synthetic":true,"types":[]},{"text":"impl Send for user_fpregs_struct","synthetic":true,"types":[]},{"text":"impl !Send for ucontext_t","synthetic":true,"types":[]},{"text":"impl Send for statvfs","synthetic":true,"types":[]},{"text":"impl Send for max_align_t","synthetic":true,"types":[]},{"text":"impl Send for sem_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_mutexattr_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_rwlockattr_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_condattr_t","synthetic":true,"types":[]},{"text":"impl Send for fanotify_event_metadata","synthetic":true,"types":[]},{"text":"impl Send for pthread_cond_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_mutex_t","synthetic":true,"types":[]},{"text":"impl Send for pthread_rwlock_t","synthetic":true,"types":[]},{"text":"impl Send for can_frame","synthetic":true,"types":[]},{"text":"impl Send for canfd_frame","synthetic":true,"types":[]},{"text":"impl Send for in6_addr","synthetic":true,"types":[]},{"text":"impl Send for __c_anonymous_sockaddr_can_can_addr","synthetic":true,"types":[]},{"text":"impl Send for DIR","synthetic":true,"types":[]},{"text":"impl Send for FILE","synthetic":true,"types":[]},{"text":"impl Send for fpos_t","synthetic":true,"types":[]},{"text":"impl Send for timezone","synthetic":true,"types":[]},{"text":"impl Send for fpos64_t","synthetic":true,"types":[]}];
implementors["log"] = [{"text":"impl&lt;'a&gt; !Send for Record&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for RecordBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Metadata&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for MetadataBuilder&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for SetLoggerError","synthetic":true,"types":[]},{"text":"impl Send for ParseLevelError","synthetic":true,"types":[]},{"text":"impl Send for Level","synthetic":true,"types":[]},{"text":"impl Send for LevelFilter","synthetic":true,"types":[]}];
implementors["openssl"] = [{"text":"impl Send for KeyError","synthetic":true,"types":[]},{"text":"impl Send for AesKey","synthetic":true,"types":[]},{"text":"impl Send for TimeDiff","synthetic":true,"types":[]},{"text":"impl Send for MsbOption","synthetic":true,"types":[]},{"text":"impl Send for CMSOptions","synthetic":true,"types":[]},{"text":"impl !Send for ConfMethod","synthetic":true,"types":[]},{"text":"impl Send for PointConversionForm","synthetic":true,"types":[]},{"text":"impl Send for Asn1Flag","synthetic":true,"types":[]},{"text":"impl !Send for Seal","synthetic":true,"types":[]},{"text":"impl !Send for Open","synthetic":true,"types":[]},{"text":"impl Send for ErrorStack","synthetic":true,"types":[]},{"text":"impl&lt;T, U&gt; Send for Index&lt;T, U&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;U: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for DigestBytes","synthetic":true,"types":[]},{"text":"impl Send for SignatureAlgorithms","synthetic":true,"types":[]},{"text":"impl Send for Nid","synthetic":true,"types":[]},{"text":"impl Send for OcspFlag","synthetic":true,"types":[]},{"text":"impl Send for OcspResponseStatus","synthetic":true,"types":[]},{"text":"impl Send for OcspCertStatus","synthetic":true,"types":[]},{"text":"impl Send for OcspRevokedStatus","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for OcspStatus&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ParsedPkcs12","synthetic":true,"types":[]},{"text":"impl Send for Pkcs12Builder","synthetic":true,"types":[]},{"text":"impl Send for KeyIvPair","synthetic":true,"types":[]},{"text":"impl Send for Pkcs7Flags","synthetic":true,"types":[]},{"text":"impl Send for Id","synthetic":true,"types":[]},{"text":"impl Send for Params","synthetic":true,"types":[]},{"text":"impl Send for Public","synthetic":true,"types":[]},{"text":"impl Send for Private","synthetic":true,"types":[]},{"text":"impl Send for Padding","synthetic":true,"types":[]},{"text":"impl Send for RsaPrivateKeyBuilder","synthetic":true,"types":[]},{"text":"impl Send for Sha1","synthetic":true,"types":[]},{"text":"impl Send for Sha224","synthetic":true,"types":[]},{"text":"impl Send for Sha256","synthetic":true,"types":[]},{"text":"impl Send for Sha384","synthetic":true,"types":[]},{"text":"impl Send for Sha512","synthetic":true,"types":[]},{"text":"impl Send for RsaPssSaltlen","synthetic":true,"types":[]},{"text":"impl Send for SrtpProfileId","synthetic":true,"types":[]},{"text":"impl Send for ConnectConfiguration","synthetic":true,"types":[]},{"text":"impl Send for SslAcceptor","synthetic":true,"types":[]},{"text":"impl Send for SslAcceptorBuilder","synthetic":true,"types":[]},{"text":"impl Send for SslConnector","synthetic":true,"types":[]},{"text":"impl Send for SslConnectorBuilder","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for ErrorCode","synthetic":true,"types":[]},{"text":"impl Send for SslOptions","synthetic":true,"types":[]},{"text":"impl Send for SslMode","synthetic":true,"types":[]},{"text":"impl Send for SslVerifyMode","synthetic":true,"types":[]},{"text":"impl Send for SslSessionCacheMode","synthetic":true,"types":[]},{"text":"impl Send for SslFiletype","synthetic":true,"types":[]},{"text":"impl Send for StatusType","synthetic":true,"types":[]},{"text":"impl Send for NameType","synthetic":true,"types":[]},{"text":"impl Send for SniError","synthetic":true,"types":[]},{"text":"impl Send for SslAlert","synthetic":true,"types":[]},{"text":"impl Send for AlpnError","synthetic":true,"types":[]},{"text":"impl Send for SslVersion","synthetic":true,"types":[]},{"text":"impl Send for SslContextBuilder","synthetic":true,"types":[]},{"text":"impl Send for CipherBits","synthetic":true,"types":[]},{"text":"impl !Send for SslCipher","synthetic":true,"types":[]},{"text":"impl Send for SslCipherRef","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for MidHandshakeSslStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for SslStream&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for SslStreamBuilder&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ShutdownState","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for HandshakeError&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for ShutdownResult","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for IntoIter&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for Iter&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; Send for IterMut&lt;'a, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Mode","synthetic":true,"types":[]},{"text":"impl Send for X509Builder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for X509v3Context&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for X509NameBuilder","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for X509NameEntries&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for X509ReqBuilder","synthetic":true,"types":[]},{"text":"impl Send for X509VerifyResult","synthetic":true,"types":[]},{"text":"impl Send for X509CheckFlags","synthetic":true,"types":[]},{"text":"impl Send for X509VerifyFlags","synthetic":true,"types":[]},{"text":"impl Send for BasicConstraints","synthetic":true,"types":[]},{"text":"impl Send for KeyUsage","synthetic":true,"types":[]},{"text":"impl Send for ExtendedKeyUsage","synthetic":true,"types":[]},{"text":"impl Send for SubjectKeyIdentifier","synthetic":true,"types":[]},{"text":"impl Send for AuthorityKeyIdentifier","synthetic":true,"types":[]},{"text":"impl Send for SubjectAlternativeName","synthetic":true,"types":[]},{"text":"impl Send for HashDir","synthetic":true,"types":[]},{"text":"impl Send for Asn1GeneralizedTime","synthetic":false,"types":[]},{"text":"impl Send for Asn1GeneralizedTimeRef","synthetic":false,"types":[]},{"text":"impl Send for Asn1Time","synthetic":false,"types":[]},{"text":"impl Send for Asn1TimeRef","synthetic":false,"types":[]},{"text":"impl Send for Asn1String","synthetic":false,"types":[]},{"text":"impl Send for Asn1StringRef","synthetic":false,"types":[]},{"text":"impl Send for Asn1Integer","synthetic":false,"types":[]},{"text":"impl Send for Asn1IntegerRef","synthetic":false,"types":[]},{"text":"impl Send for Asn1BitString","synthetic":false,"types":[]},{"text":"impl Send for Asn1BitStringRef","synthetic":false,"types":[]},{"text":"impl Send for Asn1Object","synthetic":false,"types":[]},{"text":"impl Send for Asn1ObjectRef","synthetic":false,"types":[]},{"text":"impl Send for BigNumContext","synthetic":false,"types":[]},{"text":"impl Send for BigNumContextRef","synthetic":false,"types":[]},{"text":"impl Send for BigNum","synthetic":false,"types":[]},{"text":"impl Send for BigNumRef","synthetic":false,"types":[]},{"text":"impl Send for CmsContentInfo","synthetic":false,"types":[]},{"text":"impl Send for CmsContentInfoRef","synthetic":false,"types":[]},{"text":"impl Send for Conf","synthetic":false,"types":[]},{"text":"impl Send for ConfRef","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Send for Deriver&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Send for Dh&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Send for DhRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Send for Dsa&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Send for DsaRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Send for EcGroup","synthetic":false,"types":[]},{"text":"impl Send for EcGroupRef","synthetic":false,"types":[]},{"text":"impl Send for EcPoint","synthetic":false,"types":[]},{"text":"impl Send for EcPointRef","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Send for EcKey&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Send for EcKeyRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Send for EcdsaSig","synthetic":false,"types":[]},{"text":"impl Send for EcdsaSigRef","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Send for Encrypter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Send for Decrypter&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Send for Error","synthetic":false,"types":[]},{"text":"impl Send for MessageDigest","synthetic":false,"types":[]},{"text":"impl Send for Hasher","synthetic":false,"types":[]},{"text":"impl Send for OcspBasicResponse","synthetic":false,"types":[]},{"text":"impl Send for OcspBasicResponseRef","synthetic":false,"types":[]},{"text":"impl Send for OcspCertId","synthetic":false,"types":[]},{"text":"impl Send for OcspCertIdRef","synthetic":false,"types":[]},{"text":"impl Send for OcspResponse","synthetic":false,"types":[]},{"text":"impl Send for OcspResponseRef","synthetic":false,"types":[]},{"text":"impl Send for OcspRequest","synthetic":false,"types":[]},{"text":"impl Send for OcspRequestRef","synthetic":false,"types":[]},{"text":"impl Send for OcspOneReq","synthetic":false,"types":[]},{"text":"impl Send for OcspOneReqRef","synthetic":false,"types":[]},{"text":"impl Send for Pkcs12","synthetic":false,"types":[]},{"text":"impl Send for Pkcs12Ref","synthetic":false,"types":[]},{"text":"impl Send for Pkcs7","synthetic":false,"types":[]},{"text":"impl Send for Pkcs7Ref","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Send for PKey&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Send for PKeyRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Send for Rsa&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Send for RsaRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Send for Signer&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl&lt;'a&gt; Send for Verifier&lt;'a&gt;","synthetic":false,"types":[]},{"text":"impl Send for SrtpProtectionProfile","synthetic":false,"types":[]},{"text":"impl Send for SrtpProtectionProfileRef","synthetic":false,"types":[]},{"text":"impl Send for SslMethod","synthetic":false,"types":[]},{"text":"impl Send for SslContext","synthetic":false,"types":[]},{"text":"impl Send for SslContextRef","synthetic":false,"types":[]},{"text":"impl Send for SslSession","synthetic":false,"types":[]},{"text":"impl Send for SslSessionRef","synthetic":false,"types":[]},{"text":"impl Send for Ssl","synthetic":false,"types":[]},{"text":"impl Send for SslRef","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Stackable + Send&gt; Send for Stack&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T:&nbsp;Stackable + Send&gt; Send for StackRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Send for OpensslString","synthetic":false,"types":[]},{"text":"impl Send for OpensslStringRef","synthetic":false,"types":[]},{"text":"impl Send for Cipher","synthetic":false,"types":[]},{"text":"impl Send for Crypter","synthetic":false,"types":[]},{"text":"impl Send for X509VerifyParam","synthetic":false,"types":[]},{"text":"impl Send for X509VerifyParamRef","synthetic":false,"types":[]},{"text":"impl Send for X509StoreBuilder","synthetic":false,"types":[]},{"text":"impl Send for X509StoreBuilderRef","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Send for X509Lookup&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Send for X509LookupRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Send for X509LookupMethod&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl&lt;T&gt; Send for X509LookupMethodRef&lt;T&gt;","synthetic":false,"types":[]},{"text":"impl Send for X509Store","synthetic":false,"types":[]},{"text":"impl Send for X509StoreRef","synthetic":false,"types":[]},{"text":"impl Send for X509StoreContext","synthetic":false,"types":[]},{"text":"impl Send for X509StoreContextRef","synthetic":false,"types":[]},{"text":"impl Send for X509","synthetic":false,"types":[]},{"text":"impl Send for X509Ref","synthetic":false,"types":[]},{"text":"impl Send for X509Extension","synthetic":false,"types":[]},{"text":"impl Send for X509ExtensionRef","synthetic":false,"types":[]},{"text":"impl Send for X509Name","synthetic":false,"types":[]},{"text":"impl Send for X509NameRef","synthetic":false,"types":[]},{"text":"impl Send for X509NameEntry","synthetic":false,"types":[]},{"text":"impl Send for X509NameEntryRef","synthetic":false,"types":[]},{"text":"impl Send for X509Req","synthetic":false,"types":[]},{"text":"impl Send for X509ReqRef","synthetic":false,"types":[]},{"text":"impl Send for GeneralName","synthetic":false,"types":[]},{"text":"impl Send for GeneralNameRef","synthetic":false,"types":[]},{"text":"impl Send for X509Algorithm","synthetic":false,"types":[]},{"text":"impl Send for X509AlgorithmRef","synthetic":false,"types":[]},{"text":"impl Send for X509Object","synthetic":false,"types":[]},{"text":"impl Send for X509ObjectRef","synthetic":false,"types":[]}];
implementors["openssl_sys"] = [{"text":"impl Send for AES_KEY","synthetic":true,"types":[]},{"text":"impl !Send for ASN1_ENCODING","synthetic":true,"types":[]},{"text":"impl !Send for stack_st_ASN1_OBJECT","synthetic":true,"types":[]},{"text":"impl !Send for BIO_METHOD","synthetic":true,"types":[]},{"text":"impl !Send for stack_st_void","synthetic":true,"types":[]},{"text":"impl !Send for ECDSA_SIG","synthetic":true,"types":[]},{"text":"impl !Send for ERR_STRING_DATA","synthetic":true,"types":[]},{"text":"impl !Send for BIO","synthetic":true,"types":[]},{"text":"impl !Send for BIGNUM","synthetic":true,"types":[]},{"text":"impl !Send for EVP_CIPHER","synthetic":true,"types":[]},{"text":"impl !Send for EVP_MD_CTX","synthetic":true,"types":[]},{"text":"impl !Send for EVP_PKEY","synthetic":true,"types":[]},{"text":"impl !Send for HMAC_CTX","synthetic":true,"types":[]},{"text":"impl !Send for DH","synthetic":true,"types":[]},{"text":"impl !Send for DSA","synthetic":true,"types":[]},{"text":"impl !Send for RSA","synthetic":true,"types":[]},{"text":"impl !Send for X509","synthetic":true,"types":[]},{"text":"impl !Send for X509_ALGOR","synthetic":true,"types":[]},{"text":"impl !Send for X509_STORE","synthetic":true,"types":[]},{"text":"impl !Send for X509_VERIFY_PARAM","synthetic":true,"types":[]},{"text":"impl !Send for X509V3_CTX","synthetic":true,"types":[]},{"text":"impl !Send for SSL","synthetic":true,"types":[]},{"text":"impl !Send for SSL_CTX","synthetic":true,"types":[]},{"text":"impl !Send for SRP_CTX","synthetic":true,"types":[]},{"text":"impl !Send for CRYPTO_EX_DATA","synthetic":true,"types":[]},{"text":"impl !Send for stack_st_OPENSSL_STRING","synthetic":true,"types":[]},{"text":"impl Send for SHA_CTX","synthetic":true,"types":[]},{"text":"impl Send for SHA256_CTX","synthetic":true,"types":[]},{"text":"impl Send for SHA512_CTX","synthetic":true,"types":[]},{"text":"impl !Send for SSL_SESSION","synthetic":true,"types":[]},{"text":"impl !Send for stack_st_SSL_CIPHER","synthetic":true,"types":[]},{"text":"impl !Send for SRTP_PROTECTION_PROFILE","synthetic":true,"types":[]},{"text":"impl !Send for stack_st_SRTP_PROTECTION_PROFILE","synthetic":true,"types":[]},{"text":"impl !Send for _STACK","synthetic":true,"types":[]},{"text":"impl !Send for X509_VAL","synthetic":true,"types":[]},{"text":"impl !Send for stack_st_X509_NAME","synthetic":true,"types":[]},{"text":"impl !Send for stack_st_X509_EXTENSION","synthetic":true,"types":[]},{"text":"impl !Send for stack_st_X509_ATTRIBUTE","synthetic":true,"types":[]},{"text":"impl !Send for X509_REQ_INFO","synthetic":true,"types":[]},{"text":"impl !Send for X509_CRL","synthetic":true,"types":[]},{"text":"impl !Send for stack_st_X509_CRL","synthetic":true,"types":[]},{"text":"impl !Send for X509_CRL_INFO","synthetic":true,"types":[]},{"text":"impl !Send for X509_REVOKED","synthetic":true,"types":[]},{"text":"impl !Send for stack_st_X509_REVOKED","synthetic":true,"types":[]},{"text":"impl !Send for X509_REQ","synthetic":true,"types":[]},{"text":"impl !Send for X509_CINF","synthetic":true,"types":[]},{"text":"impl !Send for stack_st_X509","synthetic":true,"types":[]},{"text":"impl !Send for X509_OBJECT","synthetic":true,"types":[]},{"text":"impl !Send for stack_st_X509_OBJECT","synthetic":true,"types":[]},{"text":"impl !Send for stack_st_X509_LOOKUP","synthetic":true,"types":[]},{"text":"impl !Send for GENERAL_NAME","synthetic":true,"types":[]},{"text":"impl !Send for stack_st_GENERAL_NAME","synthetic":true,"types":[]},{"text":"impl !Send for AUTHORITY_KEYID","synthetic":true,"types":[]},{"text":"impl !Send for X509_OBJECT_data","synthetic":true,"types":[]},{"text":"impl Send for CMS_ContentInfo","synthetic":true,"types":[]},{"text":"impl Send for point_conversion_form_t","synthetic":true,"types":[]},{"text":"impl Send for EC_METHOD","synthetic":true,"types":[]},{"text":"impl Send for EC_GROUP","synthetic":true,"types":[]},{"text":"impl Send for EC_POINT","synthetic":true,"types":[]},{"text":"impl Send for OCSP_CERTID","synthetic":true,"types":[]},{"text":"impl Send for OCSP_ONEREQ","synthetic":true,"types":[]},{"text":"impl Send for OCSP_REQUEST","synthetic":true,"types":[]},{"text":"impl Send for OCSP_BASICRESP","synthetic":true,"types":[]},{"text":"impl Send for ASN1_INTEGER","synthetic":true,"types":[]},{"text":"impl Send for ASN1_GENERALIZEDTIME","synthetic":true,"types":[]},{"text":"impl Send for ASN1_STRING","synthetic":true,"types":[]},{"text":"impl Send for ASN1_BIT_STRING","synthetic":true,"types":[]},{"text":"impl Send for ASN1_TIME","synthetic":true,"types":[]},{"text":"impl Send for ASN1_TYPE","synthetic":true,"types":[]},{"text":"impl Send for ASN1_OBJECT","synthetic":true,"types":[]},{"text":"impl Send for ASN1_OCTET_STRING","synthetic":true,"types":[]},{"text":"impl Send for bio_st","synthetic":true,"types":[]},{"text":"impl Send for BN_BLINDING","synthetic":true,"types":[]},{"text":"impl Send for BN_MONT_CTX","synthetic":true,"types":[]},{"text":"impl Send for BN_CTX","synthetic":true,"types":[]},{"text":"impl Send for BN_GENCB","synthetic":true,"types":[]},{"text":"impl Send for EVP_CIPHER_CTX","synthetic":true,"types":[]},{"text":"impl Send for EVP_MD","synthetic":true,"types":[]},{"text":"impl Send for PKCS8_PRIV_KEY_INFO","synthetic":true,"types":[]},{"text":"impl Send for EVP_PKEY_ASN1_METHOD","synthetic":true,"types":[]},{"text":"impl Send for EVP_PKEY_CTX","synthetic":true,"types":[]},{"text":"impl Send for DH_METHOD","synthetic":true,"types":[]},{"text":"impl Send for DSA_METHOD","synthetic":true,"types":[]},{"text":"impl Send for RSA_METHOD","synthetic":true,"types":[]},{"text":"impl Send for EC_KEY","synthetic":true,"types":[]},{"text":"impl Send for X509_LOOKUP_METHOD","synthetic":true,"types":[]},{"text":"impl Send for X509_NAME","synthetic":true,"types":[]},{"text":"impl Send for X509_STORE_CTX","synthetic":true,"types":[]},{"text":"impl Send for CONF","synthetic":true,"types":[]},{"text":"impl Send for ENGINE","synthetic":true,"types":[]},{"text":"impl Send for COMP_METHOD","synthetic":true,"types":[]},{"text":"impl Send for OCSP_RESPONSE","synthetic":true,"types":[]},{"text":"impl Send for PKCS12","synthetic":true,"types":[]},{"text":"impl Send for PKCS7_SIGNED","synthetic":true,"types":[]},{"text":"impl Send for PKCS7_ENVELOPE","synthetic":true,"types":[]},{"text":"impl Send for PKCS7_SIGN_ENVELOPE","synthetic":true,"types":[]},{"text":"impl Send for PKCS7_DIGEST","synthetic":true,"types":[]},{"text":"impl Send for PKCS7_ENCRYPT","synthetic":true,"types":[]},{"text":"impl Send for PKCS7","synthetic":true,"types":[]},{"text":"impl Send for SSL_METHOD","synthetic":true,"types":[]},{"text":"impl Send for SSL_CIPHER","synthetic":true,"types":[]},{"text":"impl Send for X509_NAME_ENTRY","synthetic":true,"types":[]},{"text":"impl Send for X509_EXTENSION","synthetic":true,"types":[]},{"text":"impl Send for X509_LOOKUP","synthetic":true,"types":[]},{"text":"impl Send for X509_VERIFY_PARAM_ID","synthetic":true,"types":[]},{"text":"impl Send for CONF_METHOD","synthetic":true,"types":[]}];
implementors["proc_macro2"] = [{"text":"impl !Send for TokenStream","synthetic":true,"types":[]},{"text":"impl !Send for LexError","synthetic":true,"types":[]},{"text":"impl !Send for Span","synthetic":true,"types":[]},{"text":"impl !Send for Group","synthetic":true,"types":[]},{"text":"impl !Send for Punct","synthetic":true,"types":[]},{"text":"impl !Send for Ident","synthetic":true,"types":[]},{"text":"impl !Send for Literal","synthetic":true,"types":[]},{"text":"impl !Send for TokenTree","synthetic":true,"types":[]},{"text":"impl Send for Delimiter","synthetic":true,"types":[]},{"text":"impl Send for Spacing","synthetic":true,"types":[]},{"text":"impl !Send for IntoIter","synthetic":true,"types":[]}];
implementors["protobuf"] = [{"text":"impl Send for CachedSize","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for RepeatedField&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for SingularField&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for SingularPtrField&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CodedInputStream&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for CodedOutputStream&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for UnknownFields","synthetic":true,"types":[]},{"text":"impl&lt;'s&gt; Send for UnknownFieldsIter&lt;'s&gt;","synthetic":true,"types":[]},{"text":"impl Send for UnknownValues","synthetic":true,"types":[]},{"text":"impl&lt;'o&gt; Send for UnknownValuesIter&lt;'o&gt;","synthetic":true,"types":[]},{"text":"impl Send for UnknownValue","synthetic":true,"types":[]},{"text":"impl&lt;'o&gt; Send for UnknownValueRef&lt;'o&gt;","synthetic":true,"types":[]},{"text":"impl Send for Tag","synthetic":true,"types":[]},{"text":"impl Send for WireType","synthetic":true,"types":[]},{"text":"impl Send for FileDescriptorSet","synthetic":true,"types":[]},{"text":"impl Send for FileDescriptorProto","synthetic":true,"types":[]},{"text":"impl Send for DescriptorProto","synthetic":true,"types":[]},{"text":"impl Send for DescriptorProto_ExtensionRange","synthetic":true,"types":[]},{"text":"impl Send for DescriptorProto_ReservedRange","synthetic":true,"types":[]},{"text":"impl Send for FieldDescriptorProto","synthetic":true,"types":[]},{"text":"impl Send for OneofDescriptorProto","synthetic":true,"types":[]},{"text":"impl Send for EnumDescriptorProto","synthetic":true,"types":[]},{"text":"impl Send for EnumValueDescriptorProto","synthetic":true,"types":[]},{"text":"impl Send for ServiceDescriptorProto","synthetic":true,"types":[]},{"text":"impl Send for MethodDescriptorProto","synthetic":true,"types":[]},{"text":"impl Send for FileOptions","synthetic":true,"types":[]},{"text":"impl Send for MessageOptions","synthetic":true,"types":[]},{"text":"impl Send for FieldOptions","synthetic":true,"types":[]},{"text":"impl Send for OneofOptions","synthetic":true,"types":[]},{"text":"impl Send for EnumOptions","synthetic":true,"types":[]},{"text":"impl Send for EnumValueOptions","synthetic":true,"types":[]},{"text":"impl Send for ServiceOptions","synthetic":true,"types":[]},{"text":"impl Send for MethodOptions","synthetic":true,"types":[]},{"text":"impl Send for UninterpretedOption","synthetic":true,"types":[]},{"text":"impl Send for UninterpretedOption_NamePart","synthetic":true,"types":[]},{"text":"impl Send for SourceCodeInfo","synthetic":true,"types":[]},{"text":"impl Send for SourceCodeInfo_Location","synthetic":true,"types":[]},{"text":"impl Send for GeneratedCodeInfo","synthetic":true,"types":[]},{"text":"impl Send for GeneratedCodeInfo_Annotation","synthetic":true,"types":[]},{"text":"impl Send for FieldDescriptorProto_Type","synthetic":true,"types":[]},{"text":"impl Send for FieldDescriptorProto_Label","synthetic":true,"types":[]},{"text":"impl Send for FileOptions_OptimizeMode","synthetic":true,"types":[]},{"text":"impl Send for FieldOptions_CType","synthetic":true,"types":[]},{"text":"impl Send for FieldOptions_JSType","synthetic":true,"types":[]},{"text":"impl Send for CodeGeneratorRequest","synthetic":true,"types":[]},{"text":"impl Send for CodeGeneratorResponse","synthetic":true,"types":[]},{"text":"impl Send for CodeGeneratorResponse_File","synthetic":true,"types":[]},{"text":"impl Send for WireError","synthetic":true,"types":[]},{"text":"impl Send for ProtobufError","synthetic":true,"types":[]},{"text":"impl&lt;M, T&gt; Send for ExtFieldOptional&lt;M, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M, T&gt; Send for ExtFieldRepeated&lt;M, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for Lazy&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; !Send for LazyV2&lt;T&gt;","synthetic":true,"types":[]},{"text":"impl Send for EnumDescriptor","synthetic":true,"types":[]},{"text":"impl Send for EnumValueDescriptor","synthetic":true,"types":[]},{"text":"impl !Send for MessageDescriptor","synthetic":true,"types":[]},{"text":"impl !Send for FieldDescriptor","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ReflectValueRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ReflectFieldRef&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ProtobufTypeFloat","synthetic":true,"types":[]},{"text":"impl Send for ProtobufTypeDouble","synthetic":true,"types":[]},{"text":"impl Send for ProtobufTypeInt32","synthetic":true,"types":[]},{"text":"impl Send for ProtobufTypeInt64","synthetic":true,"types":[]},{"text":"impl Send for ProtobufTypeUint32","synthetic":true,"types":[]},{"text":"impl Send for ProtobufTypeUint64","synthetic":true,"types":[]},{"text":"impl Send for ProtobufTypeSint32","synthetic":true,"types":[]},{"text":"impl Send for ProtobufTypeSint64","synthetic":true,"types":[]},{"text":"impl Send for ProtobufTypeFixed32","synthetic":true,"types":[]},{"text":"impl Send for ProtobufTypeFixed64","synthetic":true,"types":[]},{"text":"impl Send for ProtobufTypeSfixed32","synthetic":true,"types":[]},{"text":"impl Send for ProtobufTypeSfixed64","synthetic":true,"types":[]},{"text":"impl Send for ProtobufTypeBool","synthetic":true,"types":[]},{"text":"impl Send for ProtobufTypeString","synthetic":true,"types":[]},{"text":"impl Send for ProtobufTypeBytes","synthetic":true,"types":[]},{"text":"impl Send for ProtobufTypeChars","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for ProtobufTypeEnum&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;M&gt; Send for ProtobufTypeMessage&lt;M&gt;","synthetic":true,"types":[]},{"text":"impl Send for Any","synthetic":true,"types":[]},{"text":"impl Send for Api","synthetic":true,"types":[]},{"text":"impl Send for Method","synthetic":true,"types":[]},{"text":"impl Send for Mixin","synthetic":true,"types":[]},{"text":"impl Send for Duration","synthetic":true,"types":[]},{"text":"impl Send for Empty","synthetic":true,"types":[]},{"text":"impl Send for FieldMask","synthetic":true,"types":[]},{"text":"impl Send for SourceContext","synthetic":true,"types":[]},{"text":"impl Send for Struct","synthetic":true,"types":[]},{"text":"impl Send for Value","synthetic":true,"types":[]},{"text":"impl Send for ListValue","synthetic":true,"types":[]},{"text":"impl Send for Timestamp","synthetic":true,"types":[]},{"text":"impl Send for Type","synthetic":true,"types":[]},{"text":"impl Send for Field","synthetic":true,"types":[]},{"text":"impl Send for Enum","synthetic":true,"types":[]},{"text":"impl Send for EnumValue","synthetic":true,"types":[]},{"text":"impl Send for Option","synthetic":true,"types":[]},{"text":"impl Send for DoubleValue","synthetic":true,"types":[]},{"text":"impl Send for FloatValue","synthetic":true,"types":[]},{"text":"impl Send for Int64Value","synthetic":true,"types":[]},{"text":"impl Send for UInt64Value","synthetic":true,"types":[]},{"text":"impl Send for Int32Value","synthetic":true,"types":[]},{"text":"impl Send for UInt32Value","synthetic":true,"types":[]},{"text":"impl Send for BoolValue","synthetic":true,"types":[]},{"text":"impl Send for StringValue","synthetic":true,"types":[]},{"text":"impl Send for BytesValue","synthetic":true,"types":[]},{"text":"impl Send for Value_oneof_kind","synthetic":true,"types":[]},{"text":"impl Send for NullValue","synthetic":true,"types":[]},{"text":"impl Send for Field_Kind","synthetic":true,"types":[]},{"text":"impl Send for Field_Cardinality","synthetic":true,"types":[]},{"text":"impl Send for Syntax","synthetic":true,"types":[]}];
implementors["rust_cast"] = [{"text":"impl&lt;'a&gt; !Send for CastDevice&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for ChannelMessage","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !Send for ConnectionChannel&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl Send for ConnectionResponse","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !Send for HeartbeatChannel&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl Send for HeartbeatResponse","synthetic":true,"types":[]},{"text":"impl Send for GenericMediaMetadata","synthetic":true,"types":[]},{"text":"impl Send for MovieMediaMetadata","synthetic":true,"types":[]},{"text":"impl Send for TvShowMediaMetadata","synthetic":true,"types":[]},{"text":"impl Send for MusicTrackMediaMetadata","synthetic":true,"types":[]},{"text":"impl Send for PhotoMediaMetadata","synthetic":true,"types":[]},{"text":"impl Send for Image","synthetic":true,"types":[]},{"text":"impl Send for Media","synthetic":true,"types":[]},{"text":"impl Send for Status","synthetic":true,"types":[]},{"text":"impl Send for StatusEntry","synthetic":true,"types":[]},{"text":"impl Send for LoadCancelled","synthetic":true,"types":[]},{"text":"impl Send for LoadFailed","synthetic":true,"types":[]},{"text":"impl Send for InvalidPlayerState","synthetic":true,"types":[]},{"text":"impl Send for InvalidRequest","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !Send for MediaChannel&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl Send for StreamType","synthetic":true,"types":[]},{"text":"impl Send for Metadata","synthetic":true,"types":[]},{"text":"impl Send for PlayerState","synthetic":true,"types":[]},{"text":"impl Send for IdleReason","synthetic":true,"types":[]},{"text":"impl Send for ResumeState","synthetic":true,"types":[]},{"text":"impl Send for MediaResponse","synthetic":true,"types":[]},{"text":"impl Send for Volume","synthetic":true,"types":[]},{"text":"impl Send for Application","synthetic":true,"types":[]},{"text":"impl Send for Status","synthetic":true,"types":[]},{"text":"impl Send for LaunchError","synthetic":true,"types":[]},{"text":"impl Send for InvalidRequest","synthetic":true,"types":[]},{"text":"impl&lt;'a, W&gt; !Send for ReceiverChannel&lt;'a, W&gt;","synthetic":true,"types":[]},{"text":"impl Send for ReceiverResponse","synthetic":true,"types":[]},{"text":"impl Send for CastDeviceApp","synthetic":true,"types":[]},{"text":"impl Send for SslError","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl Send for CastMessage","synthetic":true,"types":[]},{"text":"impl&lt;S&gt; Send for MessageManager&lt;S&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;S: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for CastMessagePayload","synthetic":true,"types":[]}];
implementors["ryu"] = [{"text":"impl Send for Buffer","synthetic":true,"types":[]}];
implementors["serde"] = [{"text":"impl Send for IgnoredAny","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Unexpected&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for UnitDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for BoolDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for IsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U8Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U16Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for UsizeDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for F32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for F64Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for CharDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for I128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U128Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for U32Deserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Send for StrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Send for BorrowedStrDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;E&gt; Send for StringDeserializer&lt;E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, E&gt; Send for CowStrDeserializer&lt;'a, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, E&gt; Send for BorrowedBytesDeserializer&lt;'de, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;I, E&gt; Send for SeqDeserializer&lt;I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for SeqAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, I, E&gt; Send for MapDeserializer&lt;'de, I, E&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;E: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;&lt;I as Iterator&gt;::Item as Pair&gt;::Second: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Send for MapAccessDeserializer&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;Ok, Error&gt; Send for Impossible&lt;Ok, Error&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Error: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;Ok: Send,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["serde_json"] = [{"text":"impl&lt;R&gt; Send for Deserializer&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'de, R, T&gt; Send for StreamDeserializer&lt;'de, R, T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl&lt;W, F&gt; Send for Serializer&lt;W, F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;K, V&gt; Send for Map&lt;K, V&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;K: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Number","synthetic":true,"types":[]},{"text":"impl Send for Value","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for SliceRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for StrRead&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;R&gt; Send for IoRead&lt;R&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Send for Category","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for VacantEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for OccupiedEntry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Iter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for IterMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for IntoIter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Keys&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Values&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for ValuesMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for Entry&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for CompactFormatter","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Send for PrettyFormatter&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for CharEscape","synthetic":true,"types":[]},{"text":"impl Send for Serializer","synthetic":true,"types":[]}];
implementors["syn"] = [{"text":"impl !Send for Attribute","synthetic":true,"types":[]},{"text":"impl !Send for MetaList","synthetic":true,"types":[]},{"text":"impl !Send for MetaNameValue","synthetic":true,"types":[]},{"text":"impl !Send for Field","synthetic":true,"types":[]},{"text":"impl !Send for FieldsNamed","synthetic":true,"types":[]},{"text":"impl !Send for FieldsUnnamed","synthetic":true,"types":[]},{"text":"impl !Send for Variant","synthetic":true,"types":[]},{"text":"impl !Send for VisCrate","synthetic":true,"types":[]},{"text":"impl !Send for VisPublic","synthetic":true,"types":[]},{"text":"impl !Send for VisRestricted","synthetic":true,"types":[]},{"text":"impl !Send for ExprArray","synthetic":true,"types":[]},{"text":"impl !Send for ExprAssign","synthetic":true,"types":[]},{"text":"impl !Send for ExprAssignOp","synthetic":true,"types":[]},{"text":"impl !Send for ExprAsync","synthetic":true,"types":[]},{"text":"impl !Send for ExprAwait","synthetic":true,"types":[]},{"text":"impl !Send for ExprBinary","synthetic":true,"types":[]},{"text":"impl !Send for ExprBlock","synthetic":true,"types":[]},{"text":"impl !Send for ExprBox","synthetic":true,"types":[]},{"text":"impl !Send for ExprBreak","synthetic":true,"types":[]},{"text":"impl !Send for ExprCall","synthetic":true,"types":[]},{"text":"impl !Send for ExprCast","synthetic":true,"types":[]},{"text":"impl !Send for ExprClosure","synthetic":true,"types":[]},{"text":"impl !Send for ExprContinue","synthetic":true,"types":[]},{"text":"impl !Send for ExprField","synthetic":true,"types":[]},{"text":"impl !Send for ExprForLoop","synthetic":true,"types":[]},{"text":"impl !Send for ExprGroup","synthetic":true,"types":[]},{"text":"impl !Send for ExprIf","synthetic":true,"types":[]},{"text":"impl !Send for ExprIndex","synthetic":true,"types":[]},{"text":"impl !Send for ExprLet","synthetic":true,"types":[]},{"text":"impl !Send for ExprLit","synthetic":true,"types":[]},{"text":"impl !Send for ExprLoop","synthetic":true,"types":[]},{"text":"impl !Send for ExprMacro","synthetic":true,"types":[]},{"text":"impl !Send for ExprMatch","synthetic":true,"types":[]},{"text":"impl !Send for ExprMethodCall","synthetic":true,"types":[]},{"text":"impl !Send for ExprParen","synthetic":true,"types":[]},{"text":"impl !Send for ExprPath","synthetic":true,"types":[]},{"text":"impl !Send for ExprRange","synthetic":true,"types":[]},{"text":"impl !Send for ExprReference","synthetic":true,"types":[]},{"text":"impl !Send for ExprRepeat","synthetic":true,"types":[]},{"text":"impl !Send for ExprReturn","synthetic":true,"types":[]},{"text":"impl !Send for ExprStruct","synthetic":true,"types":[]},{"text":"impl !Send for ExprTry","synthetic":true,"types":[]},{"text":"impl !Send for ExprTryBlock","synthetic":true,"types":[]},{"text":"impl !Send for ExprTuple","synthetic":true,"types":[]},{"text":"impl !Send for ExprType","synthetic":true,"types":[]},{"text":"impl !Send for ExprUnary","synthetic":true,"types":[]},{"text":"impl !Send for ExprUnsafe","synthetic":true,"types":[]},{"text":"impl !Send for ExprWhile","synthetic":true,"types":[]},{"text":"impl !Send for ExprYield","synthetic":true,"types":[]},{"text":"impl !Send for Index","synthetic":true,"types":[]},{"text":"impl !Send for BoundLifetimes","synthetic":true,"types":[]},{"text":"impl !Send for ConstParam","synthetic":true,"types":[]},{"text":"impl !Send for Generics","synthetic":true,"types":[]},{"text":"impl !Send for LifetimeDef","synthetic":true,"types":[]},{"text":"impl !Send for PredicateEq","synthetic":true,"types":[]},{"text":"impl !Send for PredicateLifetime","synthetic":true,"types":[]},{"text":"impl !Send for PredicateType","synthetic":true,"types":[]},{"text":"impl !Send for TraitBound","synthetic":true,"types":[]},{"text":"impl !Send for TypeParam","synthetic":true,"types":[]},{"text":"impl !Send for WhereClause","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ImplGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Turbofish&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for TypeGenerics&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !Send for Lifetime","synthetic":true,"types":[]},{"text":"impl !Send for LitBool","synthetic":true,"types":[]},{"text":"impl !Send for LitByte","synthetic":true,"types":[]},{"text":"impl !Send for LitByteStr","synthetic":true,"types":[]},{"text":"impl !Send for LitChar","synthetic":true,"types":[]},{"text":"impl !Send for LitFloat","synthetic":true,"types":[]},{"text":"impl !Send for LitInt","synthetic":true,"types":[]},{"text":"impl !Send for LitStr","synthetic":true,"types":[]},{"text":"impl !Send for Macro","synthetic":true,"types":[]},{"text":"impl !Send for DataEnum","synthetic":true,"types":[]},{"text":"impl !Send for DataStruct","synthetic":true,"types":[]},{"text":"impl !Send for DataUnion","synthetic":true,"types":[]},{"text":"impl !Send for DeriveInput","synthetic":true,"types":[]},{"text":"impl !Send for Abi","synthetic":true,"types":[]},{"text":"impl !Send for BareFnArg","synthetic":true,"types":[]},{"text":"impl !Send for TypeArray","synthetic":true,"types":[]},{"text":"impl !Send for TypeBareFn","synthetic":true,"types":[]},{"text":"impl !Send for TypeGroup","synthetic":true,"types":[]},{"text":"impl !Send for TypeImplTrait","synthetic":true,"types":[]},{"text":"impl !Send for TypeInfer","synthetic":true,"types":[]},{"text":"impl !Send for TypeMacro","synthetic":true,"types":[]},{"text":"impl !Send for TypeNever","synthetic":true,"types":[]},{"text":"impl !Send for TypeParen","synthetic":true,"types":[]},{"text":"impl !Send for TypePath","synthetic":true,"types":[]},{"text":"impl !Send for TypePtr","synthetic":true,"types":[]},{"text":"impl !Send for TypeReference","synthetic":true,"types":[]},{"text":"impl !Send for TypeSlice","synthetic":true,"types":[]},{"text":"impl !Send for TypeTraitObject","synthetic":true,"types":[]},{"text":"impl !Send for TypeTuple","synthetic":true,"types":[]},{"text":"impl !Send for Variadic","synthetic":true,"types":[]},{"text":"impl !Send for AngleBracketedGenericArguments","synthetic":true,"types":[]},{"text":"impl !Send for Binding","synthetic":true,"types":[]},{"text":"impl !Send for Constraint","synthetic":true,"types":[]},{"text":"impl !Send for ParenthesizedGenericArguments","synthetic":true,"types":[]},{"text":"impl !Send for Path","synthetic":true,"types":[]},{"text":"impl !Send for PathSegment","synthetic":true,"types":[]},{"text":"impl !Send for QSelf","synthetic":true,"types":[]},{"text":"impl Send for Error","synthetic":true,"types":[]},{"text":"impl !Send for AttrStyle","synthetic":true,"types":[]},{"text":"impl !Send for Meta","synthetic":true,"types":[]},{"text":"impl !Send for NestedMeta","synthetic":true,"types":[]},{"text":"impl !Send for Fields","synthetic":true,"types":[]},{"text":"impl !Send for Visibility","synthetic":true,"types":[]},{"text":"impl !Send for Expr","synthetic":true,"types":[]},{"text":"impl !Send for Member","synthetic":true,"types":[]},{"text":"impl !Send for GenericParam","synthetic":true,"types":[]},{"text":"impl !Send for TraitBoundModifier","synthetic":true,"types":[]},{"text":"impl !Send for TypeParamBound","synthetic":true,"types":[]},{"text":"impl !Send for WherePredicate","synthetic":true,"types":[]},{"text":"impl !Send for Lit","synthetic":true,"types":[]},{"text":"impl Send for StrStyle","synthetic":true,"types":[]},{"text":"impl !Send for MacroDelimiter","synthetic":true,"types":[]},{"text":"impl !Send for Data","synthetic":true,"types":[]},{"text":"impl !Send for BinOp","synthetic":true,"types":[]},{"text":"impl !Send for UnOp","synthetic":true,"types":[]},{"text":"impl !Send for ReturnType","synthetic":true,"types":[]},{"text":"impl !Send for Type","synthetic":true,"types":[]},{"text":"impl !Send for GenericArgument","synthetic":true,"types":[]},{"text":"impl !Send for PathArguments","synthetic":true,"types":[]},{"text":"impl !Send for Underscore","synthetic":true,"types":[]},{"text":"impl !Send for Abstract","synthetic":true,"types":[]},{"text":"impl !Send for As","synthetic":true,"types":[]},{"text":"impl !Send for Async","synthetic":true,"types":[]},{"text":"impl !Send for Auto","synthetic":true,"types":[]},{"text":"impl !Send for Await","synthetic":true,"types":[]},{"text":"impl !Send for Become","synthetic":true,"types":[]},{"text":"impl !Send for Box","synthetic":true,"types":[]},{"text":"impl !Send for Break","synthetic":true,"types":[]},{"text":"impl !Send for Const","synthetic":true,"types":[]},{"text":"impl !Send for Continue","synthetic":true,"types":[]},{"text":"impl !Send for Crate","synthetic":true,"types":[]},{"text":"impl !Send for Default","synthetic":true,"types":[]},{"text":"impl !Send for Do","synthetic":true,"types":[]},{"text":"impl !Send for Dyn","synthetic":true,"types":[]},{"text":"impl !Send for Else","synthetic":true,"types":[]},{"text":"impl !Send for Enum","synthetic":true,"types":[]},{"text":"impl !Send for Extern","synthetic":true,"types":[]},{"text":"impl !Send for Final","synthetic":true,"types":[]},{"text":"impl !Send for Fn","synthetic":true,"types":[]},{"text":"impl !Send for For","synthetic":true,"types":[]},{"text":"impl !Send for If","synthetic":true,"types":[]},{"text":"impl !Send for Impl","synthetic":true,"types":[]},{"text":"impl !Send for In","synthetic":true,"types":[]},{"text":"impl !Send for Let","synthetic":true,"types":[]},{"text":"impl !Send for Loop","synthetic":true,"types":[]},{"text":"impl !Send for Macro","synthetic":true,"types":[]},{"text":"impl !Send for Match","synthetic":true,"types":[]},{"text":"impl !Send for Mod","synthetic":true,"types":[]},{"text":"impl !Send for Move","synthetic":true,"types":[]},{"text":"impl !Send for Mut","synthetic":true,"types":[]},{"text":"impl !Send for Override","synthetic":true,"types":[]},{"text":"impl !Send for Priv","synthetic":true,"types":[]},{"text":"impl !Send for Pub","synthetic":true,"types":[]},{"text":"impl !Send for Ref","synthetic":true,"types":[]},{"text":"impl !Send for Return","synthetic":true,"types":[]},{"text":"impl !Send for SelfType","synthetic":true,"types":[]},{"text":"impl !Send for SelfValue","synthetic":true,"types":[]},{"text":"impl !Send for Static","synthetic":true,"types":[]},{"text":"impl !Send for Struct","synthetic":true,"types":[]},{"text":"impl !Send for Super","synthetic":true,"types":[]},{"text":"impl !Send for Trait","synthetic":true,"types":[]},{"text":"impl !Send for Try","synthetic":true,"types":[]},{"text":"impl !Send for Type","synthetic":true,"types":[]},{"text":"impl !Send for Typeof","synthetic":true,"types":[]},{"text":"impl !Send for Union","synthetic":true,"types":[]},{"text":"impl !Send for Unsafe","synthetic":true,"types":[]},{"text":"impl !Send for Unsized","synthetic":true,"types":[]},{"text":"impl !Send for Use","synthetic":true,"types":[]},{"text":"impl !Send for Virtual","synthetic":true,"types":[]},{"text":"impl !Send for Where","synthetic":true,"types":[]},{"text":"impl !Send for While","synthetic":true,"types":[]},{"text":"impl !Send for Yield","synthetic":true,"types":[]},{"text":"impl !Send for Add","synthetic":true,"types":[]},{"text":"impl !Send for AddEq","synthetic":true,"types":[]},{"text":"impl !Send for And","synthetic":true,"types":[]},{"text":"impl !Send for AndAnd","synthetic":true,"types":[]},{"text":"impl !Send for AndEq","synthetic":true,"types":[]},{"text":"impl !Send for At","synthetic":true,"types":[]},{"text":"impl !Send for Bang","synthetic":true,"types":[]},{"text":"impl !Send for Caret","synthetic":true,"types":[]},{"text":"impl !Send for CaretEq","synthetic":true,"types":[]},{"text":"impl !Send for Colon","synthetic":true,"types":[]},{"text":"impl !Send for Colon2","synthetic":true,"types":[]},{"text":"impl !Send for Comma","synthetic":true,"types":[]},{"text":"impl !Send for Div","synthetic":true,"types":[]},{"text":"impl !Send for DivEq","synthetic":true,"types":[]},{"text":"impl !Send for Dollar","synthetic":true,"types":[]},{"text":"impl !Send for Dot","synthetic":true,"types":[]},{"text":"impl !Send for Dot2","synthetic":true,"types":[]},{"text":"impl !Send for Dot3","synthetic":true,"types":[]},{"text":"impl !Send for DotDotEq","synthetic":true,"types":[]},{"text":"impl !Send for Eq","synthetic":true,"types":[]},{"text":"impl !Send for EqEq","synthetic":true,"types":[]},{"text":"impl !Send for Ge","synthetic":true,"types":[]},{"text":"impl !Send for Gt","synthetic":true,"types":[]},{"text":"impl !Send for Le","synthetic":true,"types":[]},{"text":"impl !Send for Lt","synthetic":true,"types":[]},{"text":"impl !Send for MulEq","synthetic":true,"types":[]},{"text":"impl !Send for Ne","synthetic":true,"types":[]},{"text":"impl !Send for Or","synthetic":true,"types":[]},{"text":"impl !Send for OrEq","synthetic":true,"types":[]},{"text":"impl !Send for OrOr","synthetic":true,"types":[]},{"text":"impl !Send for Pound","synthetic":true,"types":[]},{"text":"impl !Send for Question","synthetic":true,"types":[]},{"text":"impl !Send for RArrow","synthetic":true,"types":[]},{"text":"impl !Send for LArrow","synthetic":true,"types":[]},{"text":"impl !Send for Rem","synthetic":true,"types":[]},{"text":"impl !Send for RemEq","synthetic":true,"types":[]},{"text":"impl !Send for FatArrow","synthetic":true,"types":[]},{"text":"impl !Send for Semi","synthetic":true,"types":[]},{"text":"impl !Send for Shl","synthetic":true,"types":[]},{"text":"impl !Send for ShlEq","synthetic":true,"types":[]},{"text":"impl !Send for Shr","synthetic":true,"types":[]},{"text":"impl !Send for ShrEq","synthetic":true,"types":[]},{"text":"impl !Send for Star","synthetic":true,"types":[]},{"text":"impl !Send for Sub","synthetic":true,"types":[]},{"text":"impl !Send for SubEq","synthetic":true,"types":[]},{"text":"impl !Send for Tilde","synthetic":true,"types":[]},{"text":"impl !Send for Brace","synthetic":true,"types":[]},{"text":"impl !Send for Bracket","synthetic":true,"types":[]},{"text":"impl !Send for Paren","synthetic":true,"types":[]},{"text":"impl !Send for Group","synthetic":true,"types":[]},{"text":"impl !Send for TokenBuffer","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Cursor&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Send for Punctuated&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Send for Pairs&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Sync,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T, P&gt; Send for PairsMut&lt;'a, T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Send for IntoPairs&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Send for IntoIter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for Iter&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a, T&gt; !Send for IterMut&lt;'a, T&gt;","synthetic":true,"types":[]},{"text":"impl&lt;T, P&gt; Send for Pair&lt;T, P&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Send,<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Send,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for Lookahead1&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Send for ParseBuffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'c, 'a&gt; !Send for StepCursor&lt;'c, 'a&gt;","synthetic":true,"types":[]},{"text":"impl Send for Nothing","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()